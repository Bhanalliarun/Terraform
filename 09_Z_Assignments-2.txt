Create a new Terraform file called main.tf.
Create three variables.
The first variable, called image_name, needs to be set to ghost:latest.
The second variable is called container_name with a default of ghost_blog.
The final variable is called ext_port and set the default to port 80.

Create a Docker image resource called ghost_image that uses the image_name variable.

Create a Docker container resource called ghost_container.
The name will use the container_name variable.
The image will use the ghost_image resource.
The internal port will be set to 2368.
The external port will use ext_port variable.

Initialize Terraform.

Create a Terraform plan that uses the following variables:

container_name = ghost_blog1
image_name = ghost:alpine
ext_port = 8080
Output the plan to a file called tfplan.

Then apply the plan using tfplan and make sure that the apply doesn’t prompt for input.

Worked logs:

[root@terraform basics]# vi main.tf
[root@terraform basics]#
[root@terraform basics]#
[root@terraform basics]#
[root@terraform basics]# cat main.tf
provider "aws" {

        region = "us-east-1"

}

variable "server_name" {
        default = "dvs-server1"
}

variable "keypair" {
        default = "Arun_ohio"
}


resource "aws_instance" "myserver" {
  ami           = "ami-0323c3dd2da7fb37d"
  instance_type = "t2.micro"
  key_name = "${var.keypair}"
  tags = {
    Name = "${var.server_name}"
  }
}


output "mydns" {
        value = "${aws_instance.myserver.public_dns}"

}
[root@terraform basics]# terraform apply
aws_instance.myserver: Refreshing state... (ID: i-016a1a43af60edb57)

Apply complete! Resources: 0 added, 0 changed, 0 destroyed.

Outputs:

mydns = ec2-54-242-28-238.compute-1.amazonaws.com
